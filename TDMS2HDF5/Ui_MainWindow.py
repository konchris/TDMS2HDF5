# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1324, 899)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/science-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.mainLayout = QtWidgets.QHBoxLayout()
        self.mainLayout.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
        self.mainLayout.setObjectName("mainLayout")
        self.ySelectorLayout = QtWidgets.QVBoxLayout()
        self.ySelectorLayout.setObjectName("ySelectorLayout")
        self.ySelectorLabel = QtWidgets.QLabel(self.centralwidget)
        self.ySelectorLabel.setObjectName("ySelectorLabel")
        self.ySelectorLayout.addWidget(self.ySelectorLabel)
        self.ySelectorView = QtWidgets.QTreeView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ySelectorView.sizePolicy().hasHeightForWidth())
        self.ySelectorView.setSizePolicy(sizePolicy)
        self.ySelectorView.setObjectName("ySelectorView")
        self.ySelectorLayout.addWidget(self.ySelectorView)
        self.mainLayout.addLayout(self.ySelectorLayout)
        self.centralLayout = QtWidgets.QVBoxLayout()
        self.centralLayout.setObjectName("centralLayout")
        self.xSelectorLayout = QtWidgets.QHBoxLayout()
        self.xSelectorLayout.setObjectName("xSelectorLayout")
        self.xSelectorLabel = QtWidgets.QLabel(self.centralwidget)
        self.xSelectorLabel.setObjectName("xSelectorLabel")
        self.xSelectorLayout.addWidget(self.xSelectorLabel)
        self.xSelectorView = QtWidgets.QListView(self.centralwidget)
        self.xSelectorView.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.xSelectorView.sizePolicy().hasHeightForWidth())
        self.xSelectorView.setSizePolicy(sizePolicy)
        self.xSelectorView.setObjectName("xSelectorView")
        self.xSelectorLayout.addWidget(self.xSelectorView)
        self.centralLayout.addLayout(self.xSelectorLayout)
        self.mainLayout.addLayout(self.centralLayout)
        self.rightLayout = QtWidgets.QVBoxLayout()
        self.rightLayout.setObjectName("rightLayout")
        self.fileAttributesLayout = QtWidgets.QVBoxLayout()
        self.fileAttributesLayout.setObjectName("fileAttributesLayout")
        self.fileUseableChckbx = QtWidgets.QCheckBox(self.centralwidget)
        self.fileUseableChckbx.setObjectName("fileUseableChckbx")
        self.fileAttributesLayout.addWidget(self.fileUseableChckbx)
        self.fileDBLayout = QtWidgets.QHBoxLayout()
        self.fileDBLayout.setObjectName("fileDBLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.fileDBLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.fileDBLayout.addWidget(self.pushButton_2)
        self.fileAttributesLayout.addLayout(self.fileDBLayout)
        self.rightLayout.addLayout(self.fileAttributesLayout)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.rightLayout.addItem(spacerItem)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.saveChannelCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.saveChannelCheckBox.setObjectName("saveChannelCheckBox")
        self.horizontalLayout.addWidget(self.saveChannelCheckBox)
        self.allChannels = QtWidgets.QPushButton(self.centralwidget)
        self.allChannels.setObjectName("allChannels")
        self.horizontalLayout.addWidget(self.allChannels)
        self.noChannels = QtWidgets.QPushButton(self.centralwidget)
        self.noChannels.setObjectName("noChannels")
        self.horizontalLayout.addWidget(self.noChannels)
        self.rightLayout.addLayout(self.horizontalLayout)
        self.mainLayout.addLayout(self.rightLayout)
        self.gridLayout.addLayout(self.mainLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1324, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_TDMS_File = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_TDMS_File.setIcon(icon1)
        self.actionOpen_TDMS_File.setObjectName("actionOpen_TDMS_File")
        self.action_Export_to_HDF5 = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Export_to_HDF5.setIcon(icon2)
        self.action_Export_to_HDF5.setObjectName("action_Export_to_HDF5")
        self.action_Quit = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Quit.setIcon(icon3)
        self.action_Quit.setObjectName("action_Quit")
        self.actionOpen_Recent = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/open_recent.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Recent.setIcon(icon4)
        self.actionOpen_Recent.setObjectName("actionOpen_Recent")

        self.retranslateUi(MainWindow)
        self.action_Quit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TDMS to HDF5 Viewer and Converter"))
        self.ySelectorLabel.setText(_translate("MainWindow", "Y-Axis Channel"))
        self.xSelectorLabel.setText(_translate("MainWindow", "X-Axis Channel"))
        self.fileUseableChckbx.setText(_translate("MainWindow", "File is usable"))
        self.pushButton.setText(_translate("MainWindow", "Write to DB"))
        self.pushButton_2.setText(_translate("MainWindow", "Read from DB"))
        self.saveChannelCheckBox.setText(_translate("MainWindow", "Save Channel"))
        self.allChannels.setText(_translate("MainWindow", "All"))
        self.noChannels.setText(_translate("MainWindow", "None"))
        self.actionOpen_TDMS_File.setText(_translate("MainWindow", "Open &TDMS File"))
        self.actionOpen_TDMS_File.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_Export_to_HDF5.setText(_translate("MainWindow", "&Export to HDF5"))
        self.action_Export_to_HDF5.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.action_Quit.setText(_translate("MainWindow", "&Quit"))
        self.action_Quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionOpen_Recent.setText(_translate("MainWindow", "Open Recent"))

from TDMS2HDF5.resources_rc import *
